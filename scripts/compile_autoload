#!/usr/bin/env php
<?php
require_once(dirname(__FILE__) . '/../bootstrap.inc.php');
ini_set('memory_limit', '512M');
set_time_limit(0);

// Are you sure prombt. Maybe an idea to have globally?
function prompt_accept($prompttext = "Are you sure?", $default = 'N') {
  $default = strtoupper($default);
  $abort = ($default=='N') ? 'y' : 'n';
  echo "\n" . $prompttext . " [" . $default .  "/" . $abort . "]";
  $handle = fopen ("php://stdin","r");
  $line = fgets($handle);
  echo "\n";
  return in_array(trim(strtoupper($line)), array($default, ''));
}

function dir_tree($dir) {
  $path = '';
  $stack[] = $dir;
  while ($stack) {
    $thisdir = array_pop($stack);
    if ($dircont = scandir($thisdir)) {
      $i=0;
      while (isset($dircont[$i])) {
        if ($dircont[$i] !== '.' && $dircont[$i] !== '..') {
          $current_file = "{$thisdir}/{$dircont[$i]}";
          if (is_file($current_file)) {
            $path[] = "{$thisdir}/{$dircont[$i]}";
          } elseif (is_dir($current_file)) {
            $path[] = "{$thisdir}/{$dircont[$i]}";
            $stack[] = $current_file;
          }
        }
        $i++;
      }
    }
  }
  return $path;
}

function get_classes_in_file($file_name) {
  $content = file_get_contents($file_name);
  $state = false;
  $result = array();
  foreach (token_get_all($content) as $token) {
    if (is_array($token) && ($token[0] === T_CLASS || $token[0] === T_INTERFACE)) {
      $state = true;
    } elseif ($state && is_array($token) && $token[0] === T_STRING) {
      $result[strtolower($token[1])] = $file_name;
      $state = false;
    }
  }
  return $result;
}

//Generating fileinformation.
echo "Generating 'autoload.inc.php' file..";
$result = array();
$cwd = getcwd();
chdir($GLOBALS['APPLICATION_ROOT']);
foreach (dir_tree('lib') as $file_name) {
  if (preg_match('/[.]php$/', $file_name)) {
    $result = array_merge(get_classes_in_file($file_name), $result);
  }
}
foreach ($GLOBALS['PLUGINS'] as $plugin) {
  if (is_dir($plugin.'/lib')) {
    foreach (dir_tree($plugin.'/lib') as $file_name) {
      if (preg_match('/[.]php$/', $file_name)) {
        $result = array_merge(get_classes_in_file($file_name), $result);
      }
    }
  }
}
chdir($cwd);
ksort($result);

// Build filestructure.
$output = "<" . "?php\n" . '$' . "GLOBALS['AUTOLOAD'] = array(\n";
foreach ($result as $class => $file_name) {
  $file_name = preg_replace('/^'.preg_quote($GLOBALS['APPLICATION_ROOT'].'/', '/').'/', '', $file_name);
  $output .=  "  '" . $class . "' => '" . $file_name . "',\n";
}
$output .= ");\n";

//File operation
$tmpfilename = '/tmp/' . uniqid();
file_put_contents($tmpfilename, $output);
$diff = exec('diff ' . $GLOBALS['APPLICATION_ROOT'].'/config/autoload.inc.php' . ' ' . $tmpfilename);
if (!trim($diff)) {
  exit("\nNo changes to be saved.\n");
} else {
  echo "\nDifferences:\n" . $diff . "\n";
}

if (prompt_accept('Replace autoload.inc.php with these changes?')) {
  echo "Aborted.\n";
} else {
  passthru('cp -f ' . $tmpfilename . ' ' . $GLOBALS['APPLICATION_ROOT'].'/config/autoload.inc.php');
  echo "Updated file '" . $GLOBALS['APPLICATION_ROOT'] . "/config/autoload.inc.php\n";
}
